// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id         String      @id @default(uuid())
  name       String
  userId     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  billboards Billboard[] @relation("StoretoBillboard")
  categories Category[]  @relation("StoreToCategory")
  sizes      Size[]      @relation("storeToSize")
  colors     Color[]     @relation("storeToColor")
}

model Billboard {
  id         String     @id @default(uuid())
  storeId    String
  store      Store      @relation("StoretoBillboard", fields: [storeId], references: [id])
  label      String
  imageUrl   String
  createAt   DateTime   @default(now())
  updateAt   DateTime   @updatedAt
  Categories Category[]

  @@index([storeId])
}

model Category {
  id          String    @id @default(uuid())
  storeId     String
  store       Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  name        String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id       String   @id @default(uuid())
  storeId  String
  store    Store    @relation("storeToSize", fields: [storeId], references: [id])
  name     String
  value    String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([storeId])
}

model Color {
  id       String   @id @default(uuid())
  storeId  String
  store    Store    @relation("storeToColor", fields: [storeId], references: [id])
  name     String
  value    String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([storeId])
}
